{
  "contractName": "MockUSDC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Kinoshi Team\",\"details\":\"Impl\\u00e9mente un token ERC20 avec 18 d\\u00e9cimales et fonctions de mint/burn pour simuler le comportement d'USDC dans l'environnement de test\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Fonction publique pour permettre la destruction de tokens de test\",\"params\":{\"amount\":\"Montant de tokens \\u00e0 d\\u00e9truire\",\"from\":\"Adresse dont les tokens sont d\\u00e9truits\"}},\"constructor\":{\"details\":\"Initialise le token avec 18 d\\u00e9cimales (standardis\\u00e9)\",\"params\":{\"name_\":\"Nom du token\",\"symbol_\":\"Symbole du token\"}},\"decimals()\":{\"returns\":{\"_0\":\"uint8 Nombre de d\\u00e9cimales (18)\"}},\"mint(address,uint256)\":{\"details\":\"Fonction publique pour permettre la cr\\u00e9ation de tokens de test\",\"params\":{\"amount\":\"Montant de tokens \\u00e0 cr\\u00e9er\",\"to\":\"Adresse recevant les tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"MockUSDC\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"D\\u00e9truit des tokens existants\"},\"constructor\":{\"notice\":\"Constructeur du token MockUSDC\"},\"decimals()\":{\"notice\":\"Retourne le nombre de d\\u00e9cimales du token\"},\"mint(address,uint256)\":{\"notice\":\"Cr\\u00e9e de nouveaux tokens\"}},\"notice\":\"Token USDC simul\\u00e9 pour les tests et d\\u00e9monstrations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/val/Kinoshi/backend/contracts/mocks/MockUSDC.sol\":\"MockUSDC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/home/val/Kinoshi/backend/contracts/mocks/MockUSDC.sol\":{\"keccak256\":\"0x460db1577ac27c71cf41f41db3c888332612398cc975bba41823f37c07566306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1363fd7b0dd6d35a431a7d3fe8ea11af19c5db37cac018288add3dce77980967\",\"dweb:/ipfs/QmW2isnSD96gBAe5LvdbuM7X6keWK4VNVysRQZUxZdWsSx\"]},\"/home/val/Kinoshi/backend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"/home/val/Kinoshi/backend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"/home/val/Kinoshi/backend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"/home/val/Kinoshi/backend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"/home/val/Kinoshi/backend/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
  "bytecode": "60a06040523461031e57610b038038038061001981610322565b92833981019060408183031261031e5780516001600160401b03811161031e5782610045918301610347565b60208201519092906001600160401b03811161031e576100659201610347565b81516001600160401b03811161023157600354600181811c91168015610314575b602082101461021357601f81116102b1575b50602092601f821160011461025057928192935f92610245575b50508160011b915f199060031b1c1916176003555b80516001600160401b03811161023157600454600181811c91168015610227575b602082101461021357601f81116101b0575b50602091601f8211600114610150579181925f92610145575b50508160011b915f199060031b1c1916176004555b601260805260405161076a90816103998239608051816103d60152f35b015190505f80610113565b601f1982169260045f52805f20915f5b85811061019857508360019510610180575b505050811b01600455610128565b01515f1960f88460031b161c191690555f8080610172565b91926020600181928685015181550194019201610160565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610209575b601f0160051c01905b8181106101fe57506100fa565b5f81556001016101f1565b90915081906101e8565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100e8565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100b2565b601f1982169360035f52805f20915f5b8681106102995750836001959610610281575b505050811b016003556100c7565b01515f1960f88460031b161c191690555f8080610273565b91926020600181928685015181550194019201610260565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061030a575b601f0160051c01905b8181106102ff5750610098565b5f81556001016102f2565b90915081906102e9565b90607f1690610086565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761023157604052565b81601f8201121561031e578051906001600160401b03821161023157610376601f8301601f1916602001610322565b928284526020838301011161031e57815f9260208093018386015e830101529056fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde031461057857508063095ea7b3146104f657806318160ddd146104d957806323b872dd146103fa578063313ce567146103bd57806340c10f191461031b57806370a08231146102e457806395d89b41146101c95780639dc29fac1461011a578063a9059cbb146100e95763dd62ed3e14610095575f80fd5b346100e55760403660031901126100e5576100ae610671565b6100b6610687565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100e55760403660031901126100e55761010f610105610671565b602435903361069d565b602060405160018152f35b346100e55760403660031901126100e557610133610671565b602435906001600160a01b031680156101b657805f525f60205260405f205482811061019d576020835f947fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3005b9063391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b346100e5575f3660031901126100e5576040515f6004548060011c906001811680156102da575b6020831081146102c6578285529081156102aa5750600114610255575b50819003601f01601f191681019067ffffffffffffffff8211818310176102415761023d82918260405282610647565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b8282106102945750602091508201018261020d565b600181602092548385880101520191019061027f565b90506020925060ff191682840152151560051b8201018261020d565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101f0565b346100e55760203660031901126100e5576001600160a01b03610305610671565b165f525f602052602060405f2054604051908152f35b346100e55760403660031901126100e557610334610671565b6001600160a01b031660243581156103aa57600254908082018092116103965760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b346100e5575f3660031901126100e557602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100e55760603660031901126100e557610413610671565b61041b610687565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f198110610459575b5061010f935061069d565b8381106104be5784156104ab5733156104985761010f945f52600160205260405f2060018060a01b0333165f526020528360405f20910390558461044e565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100e5575f3660031901126100e5576020600254604051908152f35b346100e55760403660031901126100e55761050f610671565b6024359033156104ab576001600160a01b031690811561049857335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100e5575f3660031901126100e5575f6003548060011c9060018116801561063d575b6020831081146102c6578285529081156102aa57506001146105e85750819003601f01601f191681019067ffffffffffffffff8211818310176102415761023d82918260405282610647565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b8282106106275750602091508201018261020d565b6001816020925483858801015201910190610612565b91607f169161059c565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100e557565b602435906001600160a01b03821682036100e557565b6001600160a01b03169081156101b6576001600160a01b03169182156103aa57815f525f60205260405f205481811061071b57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffdfea2646970667358221220f66e51f6cc5661fe9227a93d081ac36c53fcec59130050d560ce89c7189ff15464736f6c634300081c0033",
  "deployedBytecode": "6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde031461057857508063095ea7b3146104f657806318160ddd146104d957806323b872dd146103fa578063313ce567146103bd57806340c10f191461031b57806370a08231146102e457806395d89b41146101c95780639dc29fac1461011a578063a9059cbb146100e95763dd62ed3e14610095575f80fd5b346100e55760403660031901126100e5576100ae610671565b6100b6610687565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100e55760403660031901126100e55761010f610105610671565b602435903361069d565b602060405160018152f35b346100e55760403660031901126100e557610133610671565b602435906001600160a01b031680156101b657805f525f60205260405f205482811061019d576020835f947fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3005b9063391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b346100e5575f3660031901126100e5576040515f6004548060011c906001811680156102da575b6020831081146102c6578285529081156102aa5750600114610255575b50819003601f01601f191681019067ffffffffffffffff8211818310176102415761023d82918260405282610647565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b8282106102945750602091508201018261020d565b600181602092548385880101520191019061027f565b90506020925060ff191682840152151560051b8201018261020d565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101f0565b346100e55760203660031901126100e5576001600160a01b03610305610671565b165f525f602052602060405f2054604051908152f35b346100e55760403660031901126100e557610334610671565b6001600160a01b031660243581156103aa57600254908082018092116103965760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b346100e5575f3660031901126100e557602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100e55760603660031901126100e557610413610671565b61041b610687565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f198110610459575b5061010f935061069d565b8381106104be5784156104ab5733156104985761010f945f52600160205260405f2060018060a01b0333165f526020528360405f20910390558461044e565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100e5575f3660031901126100e5576020600254604051908152f35b346100e55760403660031901126100e55761050f610671565b6024359033156104ab576001600160a01b031690811561049857335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100e5575f3660031901126100e5575f6003548060011c9060018116801561063d575b6020831081146102c6578285529081156102aa57506001146105e85750819003601f01601f191681019067ffffffffffffffff8211818310176102415761023d82918260405282610647565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b8282106106275750602091508201018261020d565b6001816020925483858801015201910190610612565b91607f169161059c565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100e557565b602435906001600160a01b03821682036100e557565b6001600160a01b03169081156101b6576001600160a01b03169182156103aa57815f525f60205260405f205481811061071b57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffdfea2646970667358221220f66e51f6cc5661fe9227a93d081ac36c53fcec59130050d560ce89c7189ff15464736f6c634300081c0033",
  "sourceMap": "416:1312:0:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;416:1312:0;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;416:1312:0;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;416:1312:0;;;;1648:13:2;416:1312:0;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;;;;1648:13:2;416:1312:0;;;;;1648:13:2;416:1312:0;;;;-1:-1:-1;;;;;416:1312:0;;;;1671:17:2;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;;;;1648:13:2;416:1312:0;;;;;1671:17:2;416:1312:0;;801:2;783:20;;416:1312;;;;;;;;783:20;416:1312;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;1671:17:2;-1:-1:-1;416:1312:0;;-1:-1:-1;416:1312:0;;-1:-1:-1;416:1312:0;;;;;;;;;;;;;;;;;;;;1671:17:2;416:1312:0;;;;;;;;;;1648:13:2;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:2;-1:-1:-1;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;-1:-1:-1;416:1312:0;;1671:17:2;416:1312:0;;-1:-1:-1;416:1312:0;;;;;;;;;;;;-1:-1:-1;416:1312:0;;1671:17:2;416:1312:0;;-1:-1:-1;416:1312:0;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;1648:13:2;-1:-1:-1;416:1312:0;;-1:-1:-1;416:1312:0;;-1:-1:-1;416:1312:0;;;;;;;;;;;;;;;;;;;;;1648:13:2;416:1312:0;;;;;;;;;;1648:13:2;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;-1:-1:-1;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;-1:-1:-1;;416:1312:0;;;-1:-1:-1;;;;;416:1312:0;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;416:1312:0;;;;;;;;-1:-1:-1;;416:1312:0;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;;;;;;;;;;:::o",
  "deployedSourceMap": "416:1312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;3440:5:2;416:1312:0;;:::i;:::-;;;735:10:5;;3440:5:2;:::i;:::-;416:1312:0;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;416:1312:0;8035:21:2;;8031:89;;416:1312:0;;;;;;;;;;6321:19:2;;;6317:115;;416:1312:0;;;;7064:25:2;416:1312:0;;;;;;;;;;;;;6791:21:2;416:1312:0;;6791:21:2;416:1312:0;;;;;;7064:25:2;416:1312:0;6317:115:2;6367:50;;;;416:1312:0;6367:50:2;416:1312:0;;;;;;;;6367:50:2;8031:89;8079:30;;;416:1312:0;8079:30:2;416:1312:0;;;;;8079:30:2;416:1312:0;;;;;;-1:-1:-1;;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;-1:-1:-1;;416:1312:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;-1:-1:-1;;;;;416:1312:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;;;:::i;:::-;-1:-1:-1;;;;;416:1312:0;;;7509:21:2;;7505:91;;6214:21;416:1312:0;;;;;;;;;;;7064:25:2;416:1312:0;;;6214:21:2;416:1312:0;;;;;;;;;;;;;;;;;;;;;7064:25:2;416:1312:0;;;;;;;;;;;;;7505:91:2;7553:32;;;416:1312:0;7553:32:2;416:1312:0;;;;;7553:32:2;416:1312:0;;;;;;-1:-1:-1;;416:1312:0;;;;;;;;1043:15;416:1312;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;416:1312:0;;;;;;;;;;;;;;;735:10:5;416:1312:0;;;;;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;416:1312:0;4967:5:2;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:5;9892:21:2;9888:90;;4967:5;416:1312:0;;;;;;;;;;;;;;735:10:5;416:1312:0;-1:-1:-1;416:1312:0;;;;;-1:-1:-1;416:1312:0;;;;;10557:309:2;;;9888:90;9936:31;;;416:1312:0;9936:31:2;416:1312:0;;;;;9936:31:2;9790:89;9836:32;;;416:1312:0;9836:32:2;416:1312:0;;;;;9836:32:2;10613:130;10668:60;;;;;416:1312:0;10668:60:2;735:10:5;416:1312:0;;;;;;;;10668:60:2;416:1312:0;;;;;;-1:-1:-1;;416:1312:0;;;;;2908:12:2;416:1312:0;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;;;:::i;:::-;;;735:10:5;;9794:19:2;9790:89;;-1:-1:-1;;;;;416:1312:0;;9892:21:2;;9888:90;;735:10:5;416:1312:0;;;;;;;;;-1:-1:-1;416:1312:0;;;;;-1:-1:-1;416:1312:0;;;;;;;10066:31:2;416:1312:0;735:10:5;10066:31:2;;416:1312:0;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;;1837:5:2;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;416:1312:0;;;;;-1:-1:-1;;416:1312:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:2;416:1312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:1312:0;;;;:::o;:::-;;;;-1:-1:-1;;;;;416:1312:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;416:1312:0;;;;;;:::o;5374:300:2:-;-1:-1:-1;;;;;416:1312:0;;5457:18:2;;5453:86;;-1:-1:-1;;;;;416:1312:0;;5552:16:2;;5548:86;;416:1312:0;5473:1:2;416:1312:0;5473:1:2;416:1312:0;;;5473:1:2;416:1312:0;;6321:19:2;;;6317:115;;416:1312:0;7064:25:2;416:1312:0;;;;5473:1:2;416:1312:0;5473:1:2;416:1312:0;;;;5473:1:2;416:1312:0;;;5473:1:2;416:1312:0;5473:1:2;416:1312:0;;;5473:1:2;416:1312:0;;;;;;;;;;;;7064:25:2;5374:300::o;6317:115::-;6367:50;;;;5473:1;6367:50;;416:1312:0;;;;;;5473:1:2;6367:50",
  "sourcePath": "/home/val/Kinoshi/backend/contracts/mocks/MockUSDC.sol",
  "compiler": {
    "name": "solc",
    "version": "0.8.28+commit.7893614a"
  },
  "ast": {
    "absolutePath": "/home/val/Kinoshi/backend/contracts/mocks/MockUSDC.sol",
    "exportedSymbols": {
      "Context": [849],
      "ERC20": [715],
      "IERC20": [793],
      "IERC20Errors": [105],
      "IERC20Metadata": [819],
      "MockUSDC": [63]
    },
    "id": 64,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "0.8", ".28"],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "/home/val/Kinoshi/backend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "/home/val/Kinoshi/backend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 716,
        "src": "57:94:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC20",
              "nameLocations": ["437:5:0"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 715,
              "src": "437:5:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "437:5:0"
          }
        ],
        "canonicalName": "MockUSDC",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "153:262:0",
          "text": " @title MockUSDC\n @author Kinoshi Team\n @notice Token USDC simulé pour les tests et démonstrations\n @dev Implémente un token ERC20 avec 18 décimales et fonctions de mint/burn\n pour simuler le comportement d'USDC dans l'environnement de test"
        },
        "fullyImplemented": true,
        "id": 63,
        "linearizedBaseContracts": [63, 715, 105, 819, 793, 849],
        "name": "MockUSDC",
        "nameLocation": "425:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "immutable",
            "name": "_customDecimals",
            "nameLocation": "473:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 63,
            "src": "449:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 6,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "449:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "773:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19,
                      "name": "_customDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "783:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3138",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "801:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "783:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "783:20:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "495:195:0",
              "text": " @notice Constructeur du token MockUSDC\n @param name_ Nom du token\n @param symbol_ Symbole du token\n @dev Initialise le token avec 18 décimales (standardisé)"
            },
            "id": 24,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "757:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "764:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 17,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 14,
                  "name": "ERC20",
                  "nameLocations": ["751:5:0"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 715,
                  "src": "751:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "751:21:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "721:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "707:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "742:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "728:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:44:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "773:0:0"
            },
            "scope": 63,
            "src": "695:148:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [279],
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "1026:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 31,
                    "name": "_customDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "1043:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 30,
                  "id": 32,
                  "nodeType": "Return",
                  "src": "1036:22:0"
                }
              ]
            },
            "documentation": {
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "849:115:0",
              "text": " @notice Retourne le nombre de décimales du token\n @return uint8 Nombre de décimales (18)"
            },
            "functionSelector": "313ce567",
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "978:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1001:8:0"
            },
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "1019:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:7:0"
            },
            "scope": 63,
            "src": "969:96:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1348:34:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1364:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1368:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1358:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:17:0"
                }
              ]
            },
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "1071:221:0",
              "text": " @notice Crée de nouveaux tokens\n @param to Adresse recevant les tokens\n @param amount Montant de tokens à créer\n @dev Fonction publique pour permettre la création de tokens de test"
            },
            "functionSelector": "40c10f19",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1306:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1319:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1311:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1331:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1323:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:28:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1348:0:0"
            },
            "scope": 63,
            "src": "1297:85:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1690:36:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1706:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 58,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1712:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 56,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "1700:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1700:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:19:0"
                }
              ]
            },
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "1388:244:0",
              "text": " @notice Détruit des tokens existants\n @param from Adresse dont les tokens sont détruits\n @param amount Montant de tokens à détruire\n @dev Fonction publique pour permettre la destruction de tokens de test"
            },
            "functionSelector": "9dc29fac",
            "id": 62,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1646:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1659:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1651:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1673:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1665:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:30:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:0:0"
            },
            "scope": 63,
            "src": "1637:89:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 64,
        "src": "416:1312:0",
        "usedErrors": [75, 80, 85, 94, 99, 104],
        "usedEvents": [727, 736]
      }
    ],
    "src": "32:1697:0"
  },
  "functionHashes": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "379600",
      "executionCost": "infinite",
      "totalCost": "infinite"
    },
    "external": {
      "allowance(address,address)": "2790",
      "approve(address,uint256)": "24325",
      "balanceOf(address)": "2537",
      "burn(address,uint256)": "50785",
      "decimals()": "infinite",
      "mint(address,uint256)": "50665",
      "name()": "infinite",
      "symbol()": "infinite",
      "totalSupply()": "2300",
      "transfer(address,uint256)": "50952",
      "transferFrom(address,address,uint256)": "75523"
    }
  }
}
